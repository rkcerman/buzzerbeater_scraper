# Generated by Django 2.1.2 on 2018-11-13 16:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('divisions', models.SmallIntegerField(null=True)),
                ('first_season', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Leagues',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('level', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'leagues',
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('match_date', models.DateField()),
                ('season', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='OnlinePeople',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrape_date', models.DateTimeField()),
                ('value', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'online_people',
            },
        ),
        migrations.CreateModel(
            name='PlayByPlays',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=30)),
                ('quarter', models.SmallIntegerField()),
                ('clock', models.CharField(max_length=6)),
                ('score', models.CharField(max_length=10)),
                ('event', models.TextField()),
                ('play_tags', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'play_by_plays',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('last_update_at', models.DateTimeField(blank=True, null=True)),
                ('weekly_salary', models.IntegerField()),
                ('dmi', models.IntegerField()),
                ('age', models.SmallIntegerField()),
                ('height', models.SmallIntegerField()),
                ('position', models.TextField()),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('transfer_estimate', models.TextField(blank=True, null=True)),
                ('potential', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Seasons',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'seasons',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Boxscores',
            fields=[
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Matches')),
                ('away_prep_focus', models.TextField(blank=True, null=True)),
                ('away_prep_pace', models.TextField(blank=True, null=True)),
                ('home_prep_focus', models.TextField(blank=True, null=True)),
                ('home_prep_pace', models.TextField(blank=True, null=True)),
                ('away_outside_off', models.DecimalField(decimal_places=1, max_digits=3)),
                ('away_inside_off', models.DecimalField(decimal_places=1, max_digits=3)),
                ('away_outside_def', models.DecimalField(decimal_places=1, max_digits=3)),
                ('away_inside_def', models.DecimalField(decimal_places=1, max_digits=3)),
                ('away_reb', models.DecimalField(decimal_places=1, max_digits=3)),
                ('away_off_flow', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_outside_off', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_inside_off', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_outside_def', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_inside_def', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_reb', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_off_flow', models.DecimalField(decimal_places=1, max_digits=3)),
                ('home_prep_focus_matched', models.CharField(blank=True, max_length=4, null=True)),
                ('home_prep_pace_matched', models.CharField(blank=True, max_length=4, null=True)),
                ('away_prep_focus_matched', models.CharField(blank=True, max_length=4, null=True)),
                ('away_prep_pace_matched', models.CharField(blank=True, max_length=4, null=True)),
                ('match_type', models.CharField(max_length=30)),
                ('away_off_strategy', models.TextField()),
                ('away_def_strategy', models.TextField()),
                ('home_off_strategy', models.TextField()),
                ('home_def_strategy', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'boxscores',
            },
        ),
        migrations.CreateModel(
            name='PlayerHistory',
            fields=[
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Players')),
                ('event', models.CharField(max_length=25)),
                ('date', models.DateField()),
                ('season', models.SmallIntegerField()),
                ('details', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'player_history',
            },
        ),
        migrations.CreateModel(
            name='PlayerSkills',
            fields=[
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Players')),
                ('date', models.DateTimeField()),
                ('game_shape', models.SmallIntegerField()),
                ('experience', models.SmallIntegerField()),
                ('jump_shot', models.SmallIntegerField()),
                ('jump_range', models.SmallIntegerField()),
                ('outside_def', models.SmallIntegerField()),
                ('handling', models.SmallIntegerField()),
                ('driving', models.SmallIntegerField()),
                ('passing', models.SmallIntegerField()),
                ('inside_shot', models.SmallIntegerField()),
                ('inside_def', models.SmallIntegerField()),
                ('rebounding', models.SmallIntegerField()),
                ('shot_blocking', models.SmallIntegerField()),
                ('stamina', models.SmallIntegerField()),
                ('free_throw', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'player_skills',
            },
        ),
        migrations.CreateModel(
            name='ScoreTables',
            fields=[
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Matches')),
                ('qtr', models.SmallIntegerField()),
                ('away_team_score', models.SmallIntegerField()),
                ('home_team_score', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'score_tables',
            },
        ),
        migrations.CreateModel(
            name='SeasonsLeaguesTeams',
            fields=[
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Seasons')),
            ],
            options={
                'managed': False,
                'db_table': 'seasons_leagues_teams',
            },
        ),
        migrations.CreateModel(
            name='Shots',
            fields=[
                ('pbp', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.PlayByPlays')),
                ('outcome', models.TextField()),
                ('defender', models.IntegerField(blank=True, null=True)),
                ('defense_type', models.TextField(blank=True, null=True)),
                ('passer', models.IntegerField(blank=True, null=True)),
                ('shooter', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'shots',
            },
        ),
        migrations.CreateModel(
            name='BoxscoreStats',
            fields=[
                ('boxscore', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bbstats.Boxscores')),
                ('player_id', models.IntegerField()),
                ('pg_min', models.SmallIntegerField()),
                ('sg_min', models.SmallIntegerField()),
                ('sf_min', models.SmallIntegerField()),
                ('pf_min', models.SmallIntegerField()),
                ('c_min', models.SmallIntegerField()),
                ('fgm', models.SmallIntegerField()),
                ('fga', models.SmallIntegerField()),
                ('tpm', models.SmallIntegerField()),
                ('tpa', models.SmallIntegerField()),
                ('ftm', models.SmallIntegerField()),
                ('fta', models.SmallIntegerField()),
                ('oreb', models.SmallIntegerField()),
                ('reb', models.SmallIntegerField()),
                ('ast', models.SmallIntegerField()),
                ('t_o', models.SmallIntegerField()),
                ('stl', models.SmallIntegerField()),
                ('blk', models.SmallIntegerField()),
                ('pf', models.SmallIntegerField()),
                ('pts', models.SmallIntegerField()),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'boxscore_stats',
            },
        ),
    ]
